# ╭――――――――――――――――---------------------------------------------------------――╮
# │                                                                           │
# │ Bazel Build                                                               │
# │                                                                           │
# │ https://bazel.build                                                       │
# │                                                                           │
# │ Bazel is a tool that automates software builds and tests. Supported       |
# │ build tasks include running compilers and linkers to produce executable   |
# │ programs and libraries, and assembling deployable packages for Android,   |
# │ iOS and other target environments. Bazel is similar to other tools like   |
# │ Make, Ant, Gradle, Buck, Pants and Maven.                                 │
# │                                                                           │
# ╰―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――╯
FROM ubuntu:20.04 as bazel-3_7_2-build

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    git \
    openjdk-8-jdk \
    python3 \
    software-properties-common \
    unzip \
    zip \
&& apt-get clean \
&& rm -rf /var/lib/apt/lists/*

RUN ln -s $(which python3) /usr/local/bin/python

ENV BAZEL_VERSION 3.7.2

WORKDIR /bazel
RUN curl -fSsL -O https://github.com/bazelbuild/bazel/releases/download/3.7.2/bazel-3.7.2-dist.zip
#  https://github.com/bazelbuild/bazel/releases/tag/$BAZEL_VERSION/bazel-$BAZEL_VERSION-dist.zip
# https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-dist.zip
RUN unzip bazel-$BAZEL_VERSION-dist.zip

RUN bash ./compile.sh

# ╭―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――╮
# │                                                                           │
# │ Tensorflow Build                                                          │
# │                                                                           │
# │ https://www.tensorflow.org                                                │
# │                                                                           │
# │ TensorFlow is an end-to-end open source platform for machine learning.    │
# │ This section builds the tensorflow wheel and the tensorflow-io and        │
# │ tensorflow-io-gcs-filesystem wheels.  This is done in a step so the       │
# │ wheels can be coppied into a container for use.                           │
# │                                                                           │
# ╰―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――╯
FROM ubuntu:20.04 AS tf-build

COPY --from=bazel-3_7_2-build /bazel/output/bazel /usr/bin/bazel

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    git \
    gpg-agent \
    openjdk-8-jdk \
    protobuf-compiler \
    python3 \
    python3-pip \
    python3-dev \
    sudo \
    wget \
&& apt-get clean \
&& rm -rf /var/lib/apt/lists/*

ARG USER=tensorflow
RUN adduser --disabled-password --gecos "" $USER \
 && echo "$USER:$USER" | chpasswd \
 && usermod -a -G sudo $USER

RUN ln -s $(which python3) /usr/local/bin/python

USER $USER
WORKDIR /home/$USER

ENV PATH="/home/$USER/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
RUN echo "PATH=$PATH" >> /home/$USER/.bashrc

RUN python3 -m pip install --upgrade pip
RUN python3 -m pip install numpy wheel
RUN python3 -m pip install keras_preprocessing --no-deps

WORKDIR /home/$USER/src
RUN git clone --branch v2.7.0 --depth 1 https://github.com/tensorflow/tensorflow.git
RUN git clone --branch v0.23.1 --depth 1 https://github.com/tensorflow/io.git

WORKDIR /home/$USER/src/tensorflow

RUN bazel build --local_ram_resources=8192 --jobs=2 //tensorflow/tools/pip_package:build_pip_package
RUN ./bazel-bin/tensorflow/tools/pip_package/build_pip_package /home/$USER/artifacts


RUN python3 -m pip install --no-deps /home/$USER/artifacts/tensorflow-2.7.0-cp38-cp38-linux_aarch64.whl

RUN python3 -m pip install absl-py astunparse flatbuffers gast==0.4.0 google-pasta grpcio h5py keras libclang opt-einsum protobuf tensorboard tensorflow-estimator termcolor typing-extensions wrapt


WORKDIR /home/$USER/src/io
RUN ./configure.sh
RUN bazel build --local_ram_resources=8192 --jobs=2 //tensorflow_io/... //tensorflow_io_gcs_filesystem/...
RUN python3 setup.py bdist_wheel --project tensorflow_io_gcs_filesystem
RUN python3 setup.py bdist_wheel --project tensorflow_io
RUN cp dist/*.whl /home/$USER/artifacts/

# ╭―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――╮
# │                                                                           │
# │ Tensorflow                                                                │
# │                                                                           │
# │ https://www.tensorflow.org                                                │
# │                                                                           │
# │ TensorFlow is an end-to-end open source platform for machine learning. It │
# │ has a comprehensive, flexible ecosystem of tools, libraries, and          │
# │ community resources that lets researchers push the state-of-the-art in ML │
# │ and developers easily build and deploy ML-powered applications.           │
# │                                                                           │
# ╰―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――╯
FROM ubuntu:20.04 AS tensorflow

RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    git \
    gpg-agent \
    nano \
    python3 \
    python3-dev \
    python3-pip \
    sudo \
    wget \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/*

ARG USER=tensorflow

RUN adduser --disabled-password --gecos "" $USER \
 && echo "$USER:$USER" | chpasswd \
 && usermod -a -G sudo $USER

COPY --from=tf-build --chown=$USER /home/$USER/artifacts /home/$USER/artifacts

USER $USER
WORKDIR /home/$USER

ENV PATH="/home/$USER/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
RUN echo "PATH=$PATH" >> /home/$USER/.bashrc

RUN python3 -m pip install numpy wheel
RUN python3 -m pip install keras_preprocessing --no-deps

# RUN rm -rf /home/$USER/artifacts

# RUN python3 -m pip install absl-py astunparse flatbuffers gast==0.4.0 google-pasta grpcio h5py keras libclang opt-einsum protobuf tensorboard tensorflow-estimator termcolor typing-extensions wrapt

RUN python3 -m pip install /home/$USER/artifacts/*.whl



# ----- END -----
# WORKDIR /home/$USER/artifacts
# RUN wget  http://snapshots.linaro.org/ldcg/python/tensorflow-io-manylinux/11/tensorflow-io-gcs-filesystem/tensorflow_io_gcs_filesystem-0.23.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl

# RUN wget http://snapshots.linaro.org/ldcg/python/tensorflow-io-manylinux/11/tensorflow-io/tensorflow_io-0.23.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl

# https://qengineering.eu/install-tensorflow-2.7-on-raspberry-64-os.html

# https://www.tensorflow.org/io/development
# bazel build -j 8 --copt=-msse4.2 --copt=-mavx --compilation_mode=opt --verbose_failures --test_output=errors --crosstool_top=//third_party/toolchains/gcc7_manylinux2010:toolchain //tensorflow_io/... //tensorflow_io_gcs_filesystem/...
# python setup.py bdist_wheel


# https://www.tensorflow.org/io/development
# RUN bazel build --local_ram_resources=8192 --jobs=2 //tensorflow_io_gcs_filesystem/...
# RUN bazel build -j 8 --copt=-msse4.2 --copt=-mavx --compilation_mode=opt --verbose_failures --test_output=errors --crosstool_top=//third_party/toolchains/gcc7_manylinux2010:toolchain //tensorflow_io/... //tensorflow_io_gcs_filesystem/...


#   RUN python3 -m pip install *.whl


# absl-py
# grpcio
# astunparse
# flatbuffers
# h5py
# libclang
# tensorboard
